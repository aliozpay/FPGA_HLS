

================================================================
== Vitis HLS Report for 'traficLights'
================================================================
* Date:           Sun Feb 26 17:59:35 2023

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        Trafic_Lights
* Solution:       sol1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.934 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    1|    1|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.93>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%spectopmodule_ln69 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 2 'spectopmodule' 'spectopmodule_ln69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%specinterface_ln69 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 3 'specinterface' 'specinterface_ln69' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %R"   --->   Operation 4 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %R, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 5 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %L"   --->   Operation 6 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %L, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 7 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %U"   --->   Operation 8 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %U, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %D"   --->   Operation 10 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %D, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %NS"   --->   Operation 12 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %NS, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %EW"   --->   Operation 14 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %EW, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%D_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %D" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 16 'read' 'D_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%U_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %U" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 17 'read' 'U_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%L_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %L" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 18 'read' 'L_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%R_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %R" [Trafic_Lights/traficLights.cpp:69]   --->   Operation 19 'read' 'R_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.97ns)   --->   "%and_ln34 = and i1 %R_read, i1 %L_read" [Trafic_Lights/traficLights.cpp:34]   --->   Operation 20 'and' 'and_ln34' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.97ns)   --->   "%and_ln51 = and i1 %U_read, i1 %D_read" [Trafic_Lights/traficLights.cpp:51]   --->   Operation 21 'and' 'and_ln51' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns) (grouped into LUT with out node or_ln43)   --->   "%xor_ln43 = xor i1 %R_read, i1 %L_read" [Trafic_Lights/traficLights.cpp:43]   --->   Operation 22 'xor' 'xor_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node or_ln43)   --->   "%xor_ln43_1 = xor i1 %and_ln51, i1 1" [Trafic_Lights/traficLights.cpp:43]   --->   Operation 23 'xor' 'xor_ln43_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node or_ln43)   --->   "%and_ln43 = and i1 %xor_ln43, i1 %xor_ln43_1" [Trafic_Lights/traficLights.cpp:43]   --->   Operation 24 'and' 'and_ln43' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.97ns)   --->   "%or_ln65 = or i1 %R_read, i1 %L_read" [Trafic_Lights/traficLights.cpp:65]   --->   Operation 25 'or' 'or_ln65' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node or_ln43)   --->   "%or_ln65_1 = or i1 %U_read, i1 %D_read" [Trafic_Lights/traficLights.cpp:65]   --->   Operation 26 'or' 'or_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node or_ln43)   --->   "%xor_ln65 = xor i1 %or_ln65, i1 %or_ln65_1" [Trafic_Lights/traficLights.cpp:65]   --->   Operation 27 'xor' 'xor_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln43 = or i1 %and_ln43, i1 %xor_ln65" [Trafic_Lights/traficLights.cpp:43]   --->   Operation 28 'or' 'or_ln43' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln43_1 = or i1 %or_ln43, i1 %and_ln34" [Trafic_Lights/traficLights.cpp:43]   --->   Operation 29 'or' 'or_ln43_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%write_ln79 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %EW, i1 %or_ln43_1" [Trafic_Lights/traficLights.cpp:79]   --->   Operation 30 'write' 'write_ln79' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node or_ln51)   --->   "%xor_ln51 = xor i1 %and_ln34, i1 1" [Trafic_Lights/traficLights.cpp:51]   --->   Operation 31 'xor' 'xor_ln51' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node or_ln51)   --->   "%and_ln51_1 = and i1 %and_ln51, i1 %xor_ln51" [Trafic_Lights/traficLights.cpp:51]   --->   Operation 32 'and' 'and_ln51_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node or_ln51)   --->   "%xor_ln58 = xor i1 %U_read, i1 %D_read" [Trafic_Lights/traficLights.cpp:58]   --->   Operation 33 'xor' 'xor_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node or_ln51)   --->   "%xor_ln58_1 = xor i1 %or_ln65, i1 1" [Trafic_Lights/traficLights.cpp:58]   --->   Operation 34 'xor' 'xor_ln58_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node or_ln51)   --->   "%and_ln58 = and i1 %xor_ln58, i1 %xor_ln58_1" [Trafic_Lights/traficLights.cpp:58]   --->   Operation 35 'and' 'and_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln51 = or i1 %and_ln51_1, i1 %and_ln58" [Trafic_Lights/traficLights.cpp:51]   --->   Operation 36 'or' 'or_ln51' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln80 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %NS, i1 %or_ln51" [Trafic_Lights/traficLights.cpp:80]   --->   Operation 37 'write' 'write_ln80' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%ret_ln84 = ret" [Trafic_Lights/traficLights.cpp:84]   --->   Operation 38 'ret' 'ret_ln84' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.93ns
The critical path consists of the following:
	wire read operation ('D', Trafic_Lights/traficLights.cpp:69) on port 'D' (Trafic_Lights/traficLights.cpp:69) [21]  (0 ns)
	'and' operation ('and_ln51', Trafic_Lights/traficLights.cpp:51) [26]  (0.978 ns)
	'xor' operation ('xor_ln43_1', Trafic_Lights/traficLights.cpp:43) [28]  (0 ns)
	'and' operation ('and_ln43', Trafic_Lights/traficLights.cpp:43) [29]  (0 ns)
	'or' operation ('or_ln43', Trafic_Lights/traficLights.cpp:43) [33]  (0.978 ns)
	'or' operation ('or_ln43_1', Trafic_Lights/traficLights.cpp:43) [34]  (0.978 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
