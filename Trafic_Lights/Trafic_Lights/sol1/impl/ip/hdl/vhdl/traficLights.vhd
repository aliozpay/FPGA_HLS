-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity traficLights is
port (
    R : IN STD_LOGIC;
    L : IN STD_LOGIC;
    U : IN STD_LOGIC;
    D : IN STD_LOGIC;
    NS : OUT STD_LOGIC;
    EW : OUT STD_LOGIC );
end;


architecture behav of traficLights is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "traficLights_traficLights,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.934000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=32,HLS_VERSION=2022_2}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal and_ln34_fu_74_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_74_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_80_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_80_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_fu_86_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_fu_86_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln43_1_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_104_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_104_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_1_fu_110_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_1_fu_110_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_1_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln34_fu_74_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln51_fu_135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_147_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_147_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln58_1_fu_153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln51_1_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln58_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin



    EW <= (or_ln43_fu_122_p2(0) or and_ln34_fu_74_p2(0));
    NS <= (and_ln58_fu_159_p2(0) or and_ln51_1_fu_141_p2(0));
    and_ln34_fu_74_p0 <= (0=>R, others=>'-');
    and_ln34_fu_74_p1 <= (0=>L, others=>'-');
    and_ln34_fu_74_p2 <= (and_ln34_fu_74_p1 and and_ln34_fu_74_p0);
    and_ln43_fu_98_p2 <= (xor_ln43_fu_86_p2 and xor_ln43_1_fu_92_p2);
    and_ln51_1_fu_141_p2 <= (xor_ln51_fu_135_p2 and and_ln51_fu_80_p2);
    and_ln51_fu_80_p0 <= (0=>U, others=>'-');
    and_ln51_fu_80_p1 <= (0=>D, others=>'-');
    and_ln51_fu_80_p2 <= (and_ln51_fu_80_p1 and and_ln51_fu_80_p0);
    and_ln58_fu_159_p2 <= (xor_ln58_fu_147_p2 and xor_ln58_1_fu_153_p2);
    or_ln43_fu_122_p2 <= (xor_ln65_fu_116_p2 or and_ln43_fu_98_p2);
    or_ln65_1_fu_110_p0 <= (0=>U, others=>'-');
    or_ln65_1_fu_110_p1 <= (0=>D, others=>'-');
    or_ln65_1_fu_110_p2 <= (or_ln65_1_fu_110_p1 or or_ln65_1_fu_110_p0);
    or_ln65_fu_104_p0 <= (0=>R, others=>'-');
    or_ln65_fu_104_p1 <= (0=>L, others=>'-');
    or_ln65_fu_104_p2 <= (or_ln65_fu_104_p1 or or_ln65_fu_104_p0);
    xor_ln43_1_fu_92_p2 <= (ap_const_lv1_1 xor and_ln51_fu_80_p2);
    xor_ln43_fu_86_p0 <= (0=>R, others=>'-');
    xor_ln43_fu_86_p1 <= (0=>L, others=>'-');
    xor_ln43_fu_86_p2 <= (xor_ln43_fu_86_p1 xor xor_ln43_fu_86_p0);
    xor_ln51_fu_135_p2 <= (ap_const_lv1_1 xor and_ln34_fu_74_p2);
    xor_ln58_1_fu_153_p2 <= (or_ln65_fu_104_p2 xor ap_const_lv1_1);
    xor_ln58_fu_147_p0 <= (0=>U, others=>'-');
    xor_ln58_fu_147_p1 <= (0=>D, others=>'-');
    xor_ln58_fu_147_p2 <= (xor_ln58_fu_147_p1 xor xor_ln58_fu_147_p0);
    xor_ln65_fu_116_p2 <= (or_ln65_fu_104_p2 xor or_ln65_1_fu_110_p2);
end behav;
